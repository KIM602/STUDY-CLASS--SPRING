<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd"
		>
	<bean id="logAop" class="com.kyk.ex0901.LogAop"></bean> <!-- 횡단기능처리클래스를 bean으로 등록 -->
	<aop:config> <!-- aop설정 태그 -->
		<aop:aspect id="logger" ref="logAop"> <!-- aspect인 포인트컷과 advice설정, 실행시점 설정 -->
			<aop:pointcut expression="within(com.kyk.ex0901.*)"  id="publicM"></aop:pointcut> <!-- expression속성은 적용범위 -->
			<aop:around pointcut-ref="publicM" method="loggerAop"></aop:around>
			<!-- around는 실행시점으로 포인트컷 핵심기능의 메서드 실행 전후에 method에 지정된 횡단기능을 실행 -->
		</aop:aspect>
		
		<aop:aspect id="logger" ref="logAop"> <!-- aspect인 포인트컷과 advice설정, 실행시점 설정 -->
			<aop:pointcut expression="within(com.kyk.ex0901.*)"  id="publicM"></aop:pointcut> <!-- expression속성은 적용범위 -->
			<aop:before pointcut-ref="publicM" method="beforeAdvice"></aop:before>
			<!-- before는 실행시점으로 포인트컷 핵심기능의 메서드 실행 전에 method에 지정된 횡단기능을 실행 -->
		</aop:aspect>
		
		<aop:aspect id="logger" ref="logAop"> <!-- aspect인 포인트컷과 advice설정, 실행시점 설정 -->
			<aop:pointcut expression="within(com.kyk.ex0901.*)"  id="publicM"></aop:pointcut> <!-- expression속성은 적용범위 -->
			<aop:after-returning pointcut-ref="publicM" method="afterReturningAdvice"></aop:after-returning>
			<!-- after-returning은 실행시점으로 포인트컷 핵심기능의 메서드가 예외없이 실행된 후에 method에 지정된 횡단기능을 실행 -->
		</aop:aspect>
		
		<aop:aspect id="logger" ref="logAop"> <!-- aspect인 포인트컷과 advice설정, 실행시점 설정 -->
			<aop:pointcut expression="within(com.kyk.ex0901.*)"  id="publicM"></aop:pointcut> <!-- expression속성은 적용범위 -->
			<aop:after-throwing pointcut-ref="publicM" method="afterThrowingAdvice"></aop:after-throwing>
			<!-- after-throwing은 실행시점으로 포인트컷 핵심기능의 메서드가 실행 중 예외발생시 method에 지정된 횡단기능을 실행 -->
		</aop:aspect>
		
		<aop:aspect id="logger" ref="logAop"> <!-- aspect인 포인트컷과 advice설정, 실행시점 설정 -->
			<aop:pointcut expression="within(com.kyk.ex0901.*)"  id="publicM"></aop:pointcut> <!-- expression속성은 적용범위 -->
			<aop:after pointcut-ref="publicM" method="afterAdvice"></aop:after>
			<!-- after은 실행시점으로 포인트컷 핵심기능의 메서드 실행 후 (예외발생여부 무관) method에 지정된 횡단기능을 실행 -->
		</aop:aspect>
	</aop:config>
	
	<bean id="student" class="com.kyk.ex0901.Student">
		<property name="name"  value="홍길동"/>
		<property name="age" value="10"/>
		<property name="gradeNum" value="3"/>
		<property name="classNum" value="5"/>
	</bean>
	<bean id="worker" class="com.kyk.ex0901.Worker">
		<property name="name"  value="홍길순"/>
		<property name="age" value="35"/>
		<property name="job" value="개발자"/>
	</bean>

</beans>
